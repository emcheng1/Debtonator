%A is the input matrix
n = length(A);
B = A.';
W = A - B;

%weighted adjacency matrix
for i = 1:n, j = 1:i;
    W(i, j) = 0;
end

%c = column index of earliest nonzero entry
for i = 1:n-2;
    for j = i+1:n-1;
        if W(i,j) ~= 0;
            c = min(find(W(j,:) ~= 0));
            W(j, c) = W(j, c) - W(i, j);
            W(i, c) = W(i, c) + W(i, j);
            W(i, j) = 0;
            W;
        else
            continue
        end
    end
end

%reverse the directions of negative edges
W_2 = zeros(n, n);        
 
for i = 1:n, j = 1:n;
     if W(i, j) < 0;
         W_2(i, j) = 0;
     end
     if W(i, j) >= 0; 
         W_2(i, j) = W_2(i, j) + W(i, j);
     end
end

W_3 = zeros(n);
 
for i = 1:n, j = 1:n;
    if W(i, j) <= 0;
        W_3(i, j) = W(i, j);
    end
    if W(i, j) > 0;
        W_3(i, j) = 0;
    end
end
 
W_4 = -W_3.';
 
%new adjacency matrix
W_sim = W_2 + W_4

%row sums
X = sum(W_sim, 2);
% 
% for i = 1:n, j = 1:n;
%     if W_sim(i, j) X(j);
%         print YAY
%     end
% end


nodes = names;
G = digraph(W_sim, names);
H = digraph(A, names);
figure; plot(G,'EdgeLabel',G.Edges.Weight)
figure; plot(H, 'EdgeLabel', H.Edges.Weight)
